library("gplots")
library("DBI")
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
#Create multiple variables for the barplot
var1 <- dbGetQuery(con, "SELECT sum(case when (lower(primary_title) LIKE '%1%' OR lower(primary_title) LIKE '%one%' OR lower(primary_title) LIKE '%first%' OR lower(primary_title) LIKE '%ten%' OR lower(primary_title) LIKE '%eleven%' OR lower(primary_title) LIKE '%twelve%' OR lower(primary_title) LIKE '%thirteen%' OR lower(primary_title) LIKE '%twelfth%' OR lower(primary_title) LIKE '%fourteen%' OR lower(primary_title) LIKE '%fifteen%' OR lower(primary_title) LIKE '%sixteen%' OR lower(primary_title) LIKE '%seventeen%' OR lower(primary_title) LIKE '%eighteen%' OR lower(primary_title) LIKE '%nineteen%') then 1 end) AS no1,
sum(case when (lower(primary_title) LIKE '%2%' OR lower(primary_title) LIKE '%two%' OR lower(primary_title) LIKE '%second' OR lower(primary_title) LIKE '%twelve%' OR lower(primary_title) LIKE '%twenty%' OR lower(primary_title) LIKE '%twentieth%') then 1 end) AS no2,
sum(case when (lower(primary_title) LIKE '%3%' OR lower(primary_title) LIKE '%three%' OR lower(primary_title) LIKE '%third' OR lower(primary_title) LIKE '%thirteen%' OR lower(primary_title) LIKE '%thirty%' OR lower(primary_title) LIKE '%thirtieth%') then 1 end) AS no3,
sum(case when (lower(primary_title) LIKE '%4%' OR lower(primary_title) LIKE '%four%' OR lower(primary_title) LIKE '%forty%' OR lower(primary_title) LIKE '%fortieth%') then 1 end) AS no4,
sum(case when (lower(primary_title) LIKE '%5%' OR lower(primary_title) LIKE '%five%' OR lower(primary_title) LIKE '%fifth' OR lower(primary_title) LIKE '%fifty%' OR lower(primary_title) LIKE '%fiftieth%') then 1 end) AS no5,
sum(case when (lower(primary_title) LIKE '%6%' OR lower(primary_title) LIKE '%six%') then 1 end) AS no6,
sum(case when (lower(primary_title) LIKE '%7%' OR lower(primary_title) LIKE '%seven%') then 1 end) AS no7,
sum(case when (lower(primary_title) LIKE '%8%' OR lower(primary_title) LIKE '%eight') then 1 end) AS no8,
sum(case when (lower(primary_title) LIKE '%9%' OR lower(primary_title) LIKE '%nine%' OR lower(primary_title) LIKE '%ninth') then 1 end) AS no9,
sum(case when (lower(primary_title) LIKE '%0%' OR lower(primary_title) LIKE '%zero%' OR lower(primary_title) LIKE '%ten%' OR lower(primary_title) LIKE '%twenty%' OR lower(primary_title) LIKE '%thirty%' OR lower(primary_title) LIKE '%forty%' OR lower(primary_title) LIKE '%fifty%' OR lower(primary_title) LIKE '%sixty%' OR lower(primary_title) LIKE '%seventy%' OR lower(primary_title) LIKE '%eighty%' OR lower(primary_title) LIKE '%ninety%' OR lower(primary_title) LIKE '%hundred%' OR lower(primary_title) LIKE '%thousand%' OR lower(primary_title) LIKE '%million%' OR lower(primary_title) LIKE '%billion%' OR lower(primary_title) LIKE '%trillion%' OR lower(primary_title) LIKE '%zillion%') then 1 end) AS no0
FROM titles
WHERE title_type = 'movie'")
#Create model
#Data for the chart
H <- c(var1$no1, var1$no2, var1$no3, var1$no4, var1$no5, var1$no6, var1$no7, var1$no8, var1$no9, var1$no0)
jpeg(file = 'barchart3.jpg', width=800, height=600)
barplot(H, col=rainbow(10), main='Aantal films met getallen in de titel', names.arg = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "0"), ylab = 'Aantal films', space=0)
#dev.off()
#Data for the chart
H <- c(var1$no1, var1$no2, var1$no3, var1$no4, var1$no5, var1$no6, var1$no7, var1$no8, var1$no9, var1$no0)
var1 <- dbGetQuery(con, "SELECT sum(case when (lower(primary_title) LIKE '%1%' OR lower(primary_title) LIKE '%one%' OR lower(primary_title) LIKE '%first%' OR lower(primary_title) LIKE '%ten%' OR lower(primary_title) LIKE '%eleven%' OR lower(primary_title) LIKE '%twelve%' OR lower(primary_title) LIKE '%thirteen%' OR lower(primary_title) LIKE '%twelfth%' OR lower(primary_title) LIKE '%fourteen%' OR lower(primary_title) LIKE '%fifteen%' OR lower(primary_title) LIKE '%sixteen%' OR lower(primary_title) LIKE '%seventeen%' OR lower(primary_title) LIKE '%eighteen%' OR lower(primary_title) LIKE '%nineteen%') then 1 end) AS no1,
sum(case when (lower(primary_title) LIKE '%2%' OR lower(primary_title) LIKE '%two%' OR lower(primary_title) LIKE '%second' OR lower(primary_title) LIKE '%twelve%' OR lower(primary_title) LIKE '%twenty%' OR lower(primary_title) LIKE '%twentieth%') then 1 end) AS no2,
sum(case when (lower(primary_title) LIKE '%3%' OR lower(primary_title) LIKE '%three%' OR lower(primary_title) LIKE '%third' OR lower(primary_title) LIKE '%thirteen%' OR lower(primary_title) LIKE '%thirty%' OR lower(primary_title) LIKE '%thirtieth%') then 1 end) AS no3,
sum(case when (lower(primary_title) LIKE '%4%' OR lower(primary_title) LIKE '%four%' OR lower(primary_title) LIKE '%forty%' OR lower(primary_title) LIKE '%fortieth%') then 1 end) AS no4,
sum(case when (lower(primary_title) LIKE '%5%' OR lower(primary_title) LIKE '%five%' OR lower(primary_title) LIKE '%fifth' OR lower(primary_title) LIKE '%fifty%' OR lower(primary_title) LIKE '%fiftieth%') then 1 end) AS no5,
sum(case when (lower(primary_title) LIKE '%6%' OR lower(primary_title) LIKE '%six%') then 1 end) AS no6,
sum(case when (lower(primary_title) LIKE '%7%' OR lower(primary_title) LIKE '%seven%') then 1 end) AS no7,
sum(case when (lower(primary_title) LIKE '%8%' OR lower(primary_title) LIKE '%eight') then 1 end) AS no8,
sum(case when (lower(primary_title) LIKE '%9%' OR lower(primary_title) LIKE '%nine%' OR lower(primary_title) LIKE '%ninth') then 1 end) AS no9,
sum(case when (lower(primary_title) LIKE '%0%' OR lower(primary_title) LIKE '%zero%' OR lower(primary_title) LIKE '%ten%' OR lower(primary_title) LIKE '%twenty%' OR lower(primary_title) LIKE '%thirty%' OR lower(primary_title) LIKE '%forty%' OR lower(primary_title) LIKE '%fifty%' OR lower(primary_title) LIKE '%sixty%' OR lower(primary_title) LIKE '%seventy%' OR lower(primary_title) LIKE '%eighty%' OR lower(primary_title) LIKE '%ninety%' OR lower(primary_title) LIKE '%hundred%' OR lower(primary_title) LIKE '%thousand%' OR lower(primary_title) LIKE '%million%' OR lower(primary_title) LIKE '%billion%' OR lower(primary_title) LIKE '%trillion%' OR lower(primary_title) LIKE '%zillion%') then 1 end) AS no0
FROM titles
WHERE title_type = 'movie'")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
library("ROCR")
library("RPostgreSQL")
install.packages("RPostgreSQL",repos = "http://cran.r-project.org")
install.packages("DBI",repos = "http://cran.r-project.org")
install.packages("ROCR" ,repos = "http://cran.r-project.org")
install.packages("ROCR", repos = "http://cran.r-project.org")
source('~/Desktop/School/Informatica/My GitHub Repo\'s/bigmovie/Chatbot/resources/R/rScript3.R')
library("ROCR")
library("RPostgreSQL")
library("gplots")
library("DBI")
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
var1 <- dbGetQuery(con, "SELECT sum(case when (lower(primary_title) LIKE '%1%' OR lower(primary_title) LIKE '%one%' OR lower(primary_title) LIKE '%first%' OR lower(primary_title) LIKE '%ten%' OR lower(primary_title) LIKE '%eleven%' OR lower(primary_title) LIKE '%twelve%' OR lower(primary_title) LIKE '%thirteen%' OR lower(primary_title) LIKE '%twelfth%' OR lower(primary_title) LIKE '%fourteen%' OR lower(primary_title) LIKE '%fifteen%' OR lower(primary_title) LIKE '%sixteen%' OR lower(primary_title) LIKE '%seventeen%' OR lower(primary_title) LIKE '%eighteen%' OR lower(primary_title) LIKE '%nineteen%') then 1 end) AS no1,
sum(case when (lower(primary_title) LIKE '%2%' OR lower(primary_title) LIKE '%two%' OR lower(primary_title) LIKE '%second' OR lower(primary_title) LIKE '%twelve%' OR lower(primary_title) LIKE '%twenty%' OR lower(primary_title) LIKE '%twentieth%') then 1 end) AS no2,
sum(case when (lower(primary_title) LIKE '%3%' OR lower(primary_title) LIKE '%three%' OR lower(primary_title) LIKE '%third' OR lower(primary_title) LIKE '%thirteen%' OR lower(primary_title) LIKE '%thirty%' OR lower(primary_title) LIKE '%thirtieth%') then 1 end) AS no3,
sum(case when (lower(primary_title) LIKE '%4%' OR lower(primary_title) LIKE '%four%' OR lower(primary_title) LIKE '%forty%' OR lower(primary_title) LIKE '%fortieth%') then 1 end) AS no4,
sum(case when (lower(primary_title) LIKE '%5%' OR lower(primary_title) LIKE '%five%' OR lower(primary_title) LIKE '%fifth' OR lower(primary_title) LIKE '%fifty%' OR lower(primary_title) LIKE '%fiftieth%') then 1 end) AS no5,
sum(case when (lower(primary_title) LIKE '%6%' OR lower(primary_title) LIKE '%six%') then 1 end) AS no6,
sum(case when (lower(primary_title) LIKE '%7%' OR lower(primary_title) LIKE '%seven%') then 1 end) AS no7,
sum(case when (lower(primary_title) LIKE '%8%' OR lower(primary_title) LIKE '%eight') then 1 end) AS no8,
sum(case when (lower(primary_title) LIKE '%9%' OR lower(primary_title) LIKE '%nine%' OR lower(primary_title) LIKE '%ninth') then 1 end) AS no9,
sum(case when (lower(primary_title) LIKE '%0%' OR lower(primary_title) LIKE '%zero%' OR lower(primary_title) LIKE '%ten%' OR lower(primary_title) LIKE '%twenty%' OR lower(primary_title) LIKE '%thirty%' OR lower(primary_title) LIKE '%forty%' OR lower(primary_title) LIKE '%fifty%' OR lower(primary_title) LIKE '%sixty%' OR lower(primary_title) LIKE '%seventy%' OR lower(primary_title) LIKE '%eighty%' OR lower(primary_title) LIKE '%ninety%' OR lower(primary_title) LIKE '%hundred%' OR lower(primary_title) LIKE '%thousand%' OR lower(primary_title) LIKE '%million%' OR lower(primary_title) LIKE '%billion%' OR lower(primary_title) LIKE '%trillion%' OR lower(primary_title) LIKE '%zillion%') then 1 end) AS no0
FROM titles
WHERE title_type = 'movie'")
#Data for the chart
H <- c(var1$no1, var1$no2, var1$no3, var1$no4, var1$no5, var1$no6, var1$no7, var1$no8, var1$no9, var1$no0)
jpeg(file = 'barchart3.jpg', width=800, height=600)
barplot(H, col=rainbow(10), main='Aantal films met getallen in de titel', names.arg = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "0"), ylab = 'Aantal films', space=0)
barplot(H, col=rainbow(10), main='Aantal films met getallen in de titel', names.arg = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "0"), ylab = 'Aantal films', space=0)
dev.off()
barplot(H, col=rainbow(10), main='Aantal films met getallen in de titel', names.arg = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "0"), ylab = 'Aantal films', space=0)
#Data for the chart
H <- c(var1$no1, var1$no2, var1$no3, var1$no4, var1$no5, var1$no6, var1$no7, var1$no8, var1$no9, var1$no0)
jpeg(file = 'barchart3.jpg', width=800, height=600)
barplot(H, col=rainbow(10), main='Aantal films met getallen in de titel', names.arg = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "0"), ylab = 'Aantal films', space=0)
#install the needed packages
install.packages("RPostgreSQL",repos = "http://cran.r-project.org")
install.packages("DBI",repos = "http://cran.r-project.org")
install.packages("ROCR",repos = "http://cran.r-project.org")
install.packages("gplots",repos = "http://cran.r-project.org")
library("ROCR")
library("RPostgreSQL")
library("gplots")
library("DBI")
#Create a connection to the database
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
#Create multiple variables for the barplot
var1 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 1 AND titles.runtime_minutes <60 AND title_type = 'movie'")
var2 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 60 AND titles.runtime_minutes <80 AND title_type = 'movie' ")
var3 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 80 AND titles.runtime_minutes <100 AND title_type = 'movie'")
var4 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 100 AND titles.runtime_minutes <120 AND title_type = 'movie' ")
var5 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 120 AND titles.runtime_minutes <140 AND title_type = 'movie' ")
var6 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 140 AND titles.runtime_minutes <160 AND title_type = 'movie' ")
var7 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 160 AND titles.runtime_minutes <180 AND title_type = 'movie' ")
var8 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes <200 AND title_type = 'movie' ")
#Data for the chart
H <- c(var1$avg, var2$avg, var3$avg, var4$avg, var5$avg, var6$avg, var7$avg, var8$avg)
M <- c("0-60", "60-80", "80-100", "100-120", "120-140", "140-160", "160-180", "180-200")
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-60","60-80","80-100","100-120","120-140", "140-160", "160-180", "180-200"), cex=1.5,
bty="n", fill=rainbow(11));
dev.off()
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
legend("left", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
legend("center", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
legend("centertop", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
dev.off()
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
#Data for the chart
H <- c(var1$avg, var2$avg, var3$avg, var4$avg, var5$avg, var6$avg, var7$avg)
M <- c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210")
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
library("ROCR")
library("RPostgreSQL")
library("gplots")
library("DBI")
#Create a connection to the database
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
#Create multiple variables for the barplot
var1 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 1 AND titles.runtime_minutes < 30 AND title_type = 'movie'")
var2 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 30 AND titles.runtime_minutes < 60 AND title_type = 'movie' ")
var3 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 60 AND titles.runtime_minutes < 90 AND title_type = 'movie'")
var4 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 90 AND titles.runtime_minutes < 120 AND title_type = 'movie' ")
var5 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 120 AND titles.runtime_minutes < 150 AND title_type = 'movie' ")
var6 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 150 AND titles.runtime_minutes < 180 AND title_type = 'movie' ")
var7 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes < 210 AND title_type = 'movie' ")
# var8 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes < 200 AND title_type = 'movie' ")
#Data for the chart
H <- c(var1$avg, var2$avg, var3$avg, var4$avg, var5$avg, var6$avg, var7$avg)
M <- c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210")
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
library("ROCR")
library("RPostgreSQL")
library("gplots")
library("DBI")
#Create a connection to the database
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
#Create multiple variables for the barplot
var1 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 1 AND titles.runtime_minutes < 30 AND title_type = 'movie'")
var2 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 30 AND titles.runtime_minutes < 60 AND title_type = 'movie' ")
var3 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 60 AND titles.runtime_minutes < 90 AND title_type = 'movie'")
var4 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 90 AND titles.runtime_minutes < 120 AND title_type = 'movie' ")
var5 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 120 AND titles.runtime_minutes < 150 AND title_type = 'movie' ")
var6 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 150 AND titles.runtime_minutes < 180 AND title_type = 'movie' ")
var7 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes < 210 AND title_type = 'movie' ")
# var8 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes < 200 AND title_type = 'movie' ")
#Data for the chart
H <- c(var1$avg, var2$avg, var3$avg, var4$avg, var5$avg, var6$avg, var7$avg)
M <- c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210")
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
var1 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 1 AND titles.runtime_minutes < 30 AND title_type = 'movie'")
var2 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 30 AND titles.runtime_minutes < 60 AND title_type = 'movie' ")
var3 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 60 AND titles.runtime_minutes < 90 AND title_type = 'movie'")
var4 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 90 AND titles.runtime_minutes < 120 AND title_type = 'movie' ")
var5 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 120 AND titles.runtime_minutes < 150 AND title_type = 'movie' ")
var6 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 150 AND titles.runtime_minutes < 180 AND title_type = 'movie' ")
var7 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes < 210 AND title_type = 'movie' ")
#Data for the chart
H <- c(var1$avg, var2$avg, var3$avg, var4$avg, var5$avg, var6$avg, var7$avg)
M <- c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210")
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
dev.off()
var1 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 1 AND titles.runtime_minutes < 30 AND title_type = 'movie'")
var2 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 30 AND titles.runtime_minutes < 60 AND title_type = 'movie' ")
var3 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 60 AND titles.runtime_minutes < 90 AND title_type = 'movie'")
var4 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 90 AND titles.runtime_minutes < 120 AND title_type = 'movie' ")
var5 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 120 AND titles.runtime_minutes < 150 AND title_type = 'movie' ")
var6 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 150 AND titles.runtime_minutes < 180 AND title_type = 'movie' ")
var7 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes < 210 AND title_type = 'movie' ")
#Data for the chart
H <- c(var1$avg, var2$avg, var3$avg, var4$avg, var5$avg, var6$avg, var7$avg)
M <- c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210")
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
library("ROCR")
library("RPostgreSQL")
library("gplots")
library("DBI")
#Create a connection to the database
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
#Create multiple variables for the barplot
var1 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 1 AND titles.runtime_minutes < 30 AND title_type = 'movie'")
var2 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 30 AND titles.runtime_minutes < 60 AND title_type = 'movie' ")
var3 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 60 AND titles.runtime_minutes < 90 AND title_type = 'movie'")
var4 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 90 AND titles.runtime_minutes < 120 AND title_type = 'movie' ")
var5 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 120 AND titles.runtime_minutes < 150 AND title_type = 'movie' ")
var6 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 150 AND titles.runtime_minutes < 180 AND title_type = 'movie' ")
var7 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes < 210 AND title_type = 'movie' ")
#Data for the chart
H <- c(var1$avg, var2$avg, var3$avg, var4$avg, var5$avg, var6$avg, var7$avg)
M <- c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210")
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
library("ROCR")
library("RPostgreSQL")
library("gplots")
library("DBI")
#Create a connection to the database
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
#Create multiple variables for the barplot
var1 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 1 AND titles.runtime_minutes < 30 AND title_type = 'movie'")
var2 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 30 AND titles.runtime_minutes < 60 AND title_type = 'movie' ")
var3 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 60 AND titles.runtime_minutes < 90 AND title_type = 'movie'")
var4 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 90 AND titles.runtime_minutes < 120 AND title_type = 'movie' ")
var5 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 120 AND titles.runtime_minutes < 150 AND title_type = 'movie' ")
var6 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 150 AND titles.runtime_minutes < 180 AND title_type = 'movie' ")
var7 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes < 210 AND title_type = 'movie' ")
#Data for the chart
H <- c(var1$avg, var2$avg, var3$avg, var4$avg, var5$avg, var6$avg, var7$avg)
M <- c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210")
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
library("ROCR")
library("RPostgreSQL")
library("gplots")
library("DBI")
#Create a connection to the database
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
#Create multiple variables for the barplot
var1 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 1 AND titles.runtime_minutes < 30 AND title_type = 'movie'")
var2 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 30 AND titles.runtime_minutes < 60 AND title_type = 'movie' ")
var3 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 60 AND titles.runtime_minutes < 90 AND title_type = 'movie'")
var4 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 90 AND titles.runtime_minutes < 120 AND title_type = 'movie' ")
var5 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 120 AND titles.runtime_minutes < 150 AND title_type = 'movie' ")
var6 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 150 AND titles.runtime_minutes < 180 AND title_type = 'movie' ")
var7 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes < 210 AND title_type = 'movie' ")
#Data for the chart
H <- c(var1$avg, var2$avg, var3$avg, var4$avg, var5$avg, var6$avg, var7$avg)
M <- c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210")
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
library("ROCR")
library("RPostgreSQL")
library("gplots")
library("DBI")
#Create a connection to the database
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
#Create multiple variables for the barplot
var1 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 1 AND titles.runtime_minutes < 30 AND title_type = 'movie'")
var2 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 30 AND titles.runtime_minutes < 60 AND title_type = 'movie' ")
var3 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 60 AND titles.runtime_minutes < 90 AND title_type = 'movie'")
var4 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 90 AND titles.runtime_minutes < 120 AND title_type = 'movie' ")
var5 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 120 AND titles.runtime_minutes < 150 AND title_type = 'movie' ")
var6 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 150 AND titles.runtime_minutes < 180 AND title_type = 'movie' ")
var7 <-dbGetQuery(con, "SELECT AVG(average_rating) FROM ratings INNER JOIN titles ON ratings.tconst=titles.tconst WHERE titles.runtime_minutes > 180 AND titles.runtime_minutes < 210 AND title_type = 'movie' ")
#Data for the chart
H <- c(var1$avg, var2$avg, var3$avg, var4$avg, var5$avg, var6$avg, var7$avg)
M <- c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210")
#Create a png
jpeg(file = "barchart.jpg")
#Create the barplot
barplot(H, col=rainbow(11), ylim=c(6 ,7.5), main='Verband tussen de gemiddelde rating en de lengte van de film', family= "serif", space= 0)
legend("topleft", c("0-30", "30-60", "60-90", "90-120", "120-150", "150-180", "180-210"), cex=1.5,
bty="n", fill=rainbow(11));
dev.off()
library("ROCR")
library("RPostgreSQL")
library("gplots")
library("DBI")
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
#Create multiple variables for the barplot
var1 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1900 AND 1920 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var2 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1920 AND 1940 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var3 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1940 AND 1960 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var4 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1960 AND 1980 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var5 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1980 AND 2000 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var6 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 2000 AND 2003 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var7 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 2003 AND 2006 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var8 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 2006 AND 2009 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var9 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 2009 AND 2012 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var10 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 2012 AND 2015 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var11 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 2015 AND 2018 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
#Create model
#Data for the chart
H <- c(var1$count, var2$count, var3$count, var4$count, var5$count, var6$count, var7$count, var8$count, var9$count, var10$count, var11$count)
jpeg(file = "barchart2.jpg", width = 800, height = 600)
barplot(H, col=rainbow(11), main='Aantal films uit nederland', ylab = "Aantal", xlab = "Jaartal, legenda voor meer informatie.", family= "serif", space= 0)
legend("topleft", c("1900-1920","1920-1940","1940-1960","1960-1980","1980-2000", "2000-2003", "2003-2006", "2006-2009", "2009-2012", "2012-2015", "2015-2018"), cex=2,
bty="n", fill=rainbow(11));
dev.off()
library("ROCR")
library("RPostgreSQL")
library("gplots")
library("DBI")
pg = dbDriver("PostgreSQL")
con = dbConnect(pg, user="postgres", password="postgres", host="188.166.120.211", port=5432, dbname="bigmovie")
#Create multiple variables for the barplot
var1 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1900 AND 1910 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var2 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1910 AND 1920 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var3 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1920 AND 1930 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var4 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1930 AND 1940 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var5 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1940 AND 1950 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var6 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1950 AND 1960 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var7 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1960 AND 1970 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var8 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1970 AND 1980 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var9 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1980 AND 1990 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var10 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 1990 AND 2000 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var11 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 2000 AND 2010 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
var12 <- dbGetQuery(con, "SELECT count(original_title)
FROM titles
WHERE start_year BETWEEN 2010 AND 2020 AND title_type = 'movie' AND original_title IN (
SELECT title
FROM akas
WHERE types IS NULL AND is_original_title = false AND region = 'NL'
)")
#Create model
#Data for the chart
H <- c(var1$count, var2$count, var3$count, var4$count, var5$count, var6$count, var7$count, var8$count, var9$count, var10$count, var11$count, var12$count)
jpeg(file = "barchart2.jpg", width = 800, height = 600)
barplot(H, col=rainbow(11), main='Aantal films uit nederland', ylab = "Aantal", xlab = "Jaartal, legenda voor meer informatie.", family= "serif", space= 0)
legend("topleft", c("1900-1910","1910-1920","1920-1930","1930-1940","1940-1950", "1950-1960", "1960-1970", "1970-1980", "1980-1990", "1990-2000", "2000-2010", "2010-2020"), cex=2,
bty="n", fill=rainbow(11));
dev.off()
